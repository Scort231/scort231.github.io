<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Shooting Game</title>
    <style>
        body {
            margin: 0;
            overflow: hidden;
            background-color: #000;
        }
        canvas {
            display: block;
            margin: auto;
            background-color: #222;
        }
    </style>
</head>
<body>
    <canvas id="gameCanvas" width="800" height="600"></canvas>
    <script>
        const canvas = document.getElementById('gameCanvas');
        const ctx = canvas.getContext('2d');

        let player = { x: 400, y: 550, width: 50, height: 50 };
        let bullets = [];
        let enemies = [];
        let score = 0;

        function drawPlayer() {
            ctx.fillStyle = 'green';
            ctx.fillRect(player.x, player.y, player.width, player.height);
        }

        function drawBullets() {
            ctx.fillStyle = 'red';
            bullets.forEach(bullet => {
                ctx.fillRect(bullet.x, bullet.y, bullet.width, bullet.height);
            });
        }

        function drawEnemies() {
            ctx.fillStyle = 'blue';
            enemies.forEach(enemy => {
                ctx.fillRect(enemy.x, enemy.y, enemy.width, enemy.height);
            });
        }

        function update() {
            bullets.forEach((bullet, index) => {
                bullet.y -= bullet.speed;
                if (bullet.y < 0) bullets.splice(index, 1);
            });

            enemies.forEach((enemy, index) => {
                enemy.y += enemy.speed;
                if (enemy.y > canvas.height) {
                    enemies.splice(index, 1);
                }
            });

            checkCollisions();
        }

        function checkCollisions() {
            bullets.forEach((bullet, bIndex) => {
                enemies.forEach((enemy, eIndex) => {
                    if (bullet.x < enemy.x + enemy.width &&
                        bullet.x + bullet.width > enemy.x &&
                        bullet.y < enemy.y + enemy.height &&
                        bullet.y + bullet.height > enemy.y) {
                        bullets.splice(bIndex, 1);
                        enemies.splice(eIndex, 1);
                        score++;
                    }
                });
            });
        }

        function spawnEnemy() {
            const enemy = {
                x: Math.random() * (canvas.width - 50),
                y: 0,
                width: 50,
                height: 50,
                speed: 2
            };
            enemies.push(enemy);
        }

        function shoot() {
            const bullet = {
                x: player.x + player.width / 2 - 2.5,
                y: player.y,
                width: 5,
                height: 20,
                speed: 5
            };
            bullets.push(bullet);
        }

        document.addEventListener('mousemove', (event) => {
            const rect = canvas.getBoundingClientRect();
            player.x = event.clientX - rect.left - player.width / 2;
        });

        document.addEventListener('click', shoot);

        function gameLoop() {
            ctx.clearRect(0, 0, canvas.width, canvas.height);
            drawPlayer();
            drawBullets();
            drawEnemies();
            update();
            requestAnimationFrame(gameLoop);
        }

        setInterval(spawnEnemy, 1000);
        gameLoop();
    </script>
</body>
</html>